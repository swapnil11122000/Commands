to add EF core service
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));


to add MVC view support
builder.Services.AddControllersWithViews();

enable mvc routing
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");


to add razorpages
builder.Services.AddRazorPages();  


dotnet command to add EF
dotnet add package Microsoft.EntityFrameworkCore

dotnet command to add sqlserver
dotnet add package Microsoft.EntityFrameworkCore.SqlServer

dotnet commad to add tools
dotnet add package Microsoft.EntityFrameworkCore.Tools

migrations and update
dotnet ef migrations add InitialCreate
dotnet ef database update


ApplicationDBContext Constructor
public ApplicationDBContext(DbContextOptions<ApplicationDBContext> options) : base(options){}


Connectionstring
"ConnectionStrings": {
  "DefaultConnection": "Server=YOUR_SERVER;Database=YOUR_DB;Trusted_Connection=True;MultipleActiveResultSets=true;TrustServerCertificate=True"
}



builder.Services.AddControllers();
builder.Services.AddScoped<IProductService, ProductService>();
builder.Services.AddControllersWithViews(); // âœ… Registers services for views, Razor, TempData


app.UseRouting();

app.UseAuthentication();  // Add this if you're using JWT/cookie auth
app.UseAuthorization();   // ðŸ”¥ Required if using [Authorize] attribute
app.MapDefaultControllerRoute();


app.MapControllers();
